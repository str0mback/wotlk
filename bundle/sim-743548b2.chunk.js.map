{"version":3,"file":"sim-743548b2.chunk.js","sources":["../../../ui/restoration_shaman/presets.ts","../../../ui/restoration_shaman/inputs.ts","../../../ui/restoration_shaman/sim.ts"],"sourcesContent":["import { Consumes } from '../core/proto/common.js';\n\nimport { EquipmentSpec } from '../core/proto/common.js';\nimport { Flask } from '../core/proto/common.js';\nimport { Food } from '../core/proto/common.js';\nimport { Glyphs } from '../core/proto/common.js';\nimport { Potions } from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tRestorationShaman_Rotation as RestorationShamanRotation,\n\tRestorationShaman_Options as RestorationShamanOptions,\n\tShamanShield,\n\tShamanMajorGlyph,\n\tShamanMinorGlyph,\n\tShamanHealSpell,\n} from '../core/proto/shaman.js';\n\nimport {\n\tAirTotem,\n\tEarthTotem,\n\tFireTotem,\n\tWaterTotem,\n\tShamanTotems,\n} from '../core/proto/shaman.js';\n\n\nimport * as Tooltips from '../core/constants/tooltips.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const TankHealingTalents = {\n\tname: 'Tank Healing',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-30205033-05005331335010501122331251',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: ShamanMajorGlyph.GlyphOfEarthlivingWeapon,\n\t\t\tmajor2: ShamanMajorGlyph.GlyphOfEarthShield,\n\t\t\tmajor3: ShamanMajorGlyph.GlyphOfLesserHealingWave,\n\t\t\tminor2: ShamanMinorGlyph.GlyphOfWaterShield,\n\t\t\tminor1: ShamanMinorGlyph.GlyphOfRenewedLife,\n\t\t\tminor3: ShamanMinorGlyph.GlyphOfGhostWolf,\n\t\t}),\n\t}),\n};\nexport const RaidHealingTalents = {\n\tname: 'Raid Healing',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-3020503-50005331335310501122331251',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: ShamanMajorGlyph.GlyphOfChainHeal,\n\t\t\tmajor2: ShamanMajorGlyph.GlyphOfEarthShield,\n\t\t\tmajor3: ShamanMajorGlyph.GlyphOfEarthlivingWeapon,\n\t\t\tminor2: ShamanMinorGlyph.GlyphOfWaterShield,\n\t\t\tminor1: ShamanMinorGlyph.GlyphOfRenewedLife,\n\t\t\tminor3: ShamanMinorGlyph.GlyphOfGhostWolf,\n\t\t}),\n\t}),\n};\n\nexport const DefaultRotation = RestorationShamanRotation.create({\n\ttotems: ShamanTotems.create({\n\t\tearth: EarthTotem.StrengthOfEarthTotem,\n\t\tair: AirTotem.WrathOfAirTotem,\n\t\tfire: FireTotem.FlametongueTotem,\n\t\twater: WaterTotem.HealingStreamTotem,\n\t}),\n\tuseEarthShield: true,\n\tuseRiptide: true,\n});\n\nexport const DefaultOptions = RestorationShamanOptions.create({\n\tshield: ShamanShield.WaterShield,\n\tbloodlust: true,\n\tearthShieldPPM: 0,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.RunicManaInjector,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n});\n\nexport const PRE_RAID_PRESET = {\n\tname: 'Pre-raid Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 42555,\n\t\t\t\"enchant\": 3820,\n\t\t\t\"gems\": [\n\t\t\t\t41401,\n\t\t\t\t40017\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40681\n\t\t},\n\t\t{\n\t\t\t\"id\": 37875,\n\t\t\t\"enchant\": 3838,\n\t\t\t\"gems\": [\n\t\t\t\t40017\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37291,\n\t\t\t\"enchant\": 3859\n\t\t},\n\t\t{\n\t\t\t\"id\": 44180,\n\t\t\t\"enchant\": 2381\n\t\t},\n\t\t{\n\t\t\t\"id\": 37788,\n\t\t\t\"enchant\": 3758,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37623,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40693,\n\t\t\t\"gems\": [\n\t\t\t\t40051,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37791,\n\t\t\t\"enchant\": 3721\n\t\t},\n\t\t{\n\t\t\t\"id\": 44202,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t40105\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44283\n\t\t},\n\t\t{\n\t\t\t\"id\": 37694\n\t\t},\n\t\t{\n\t\t\t\"id\": 37111\n\t\t},\n\t\t{\n\t\t\t\"id\": 37657\n\t\t},\n\t\t{\n\t\t\t\"id\": 37169,\n\t\t\t\"enchant\": 3834\n\t\t},\n\t\t{\n\t\t\t\"id\": 40700,\n\t\t\t\"enchant\": 1128\n\t\t},\n\t\t{\n\t\t\t\"id\": 40709\n\t\t}\n  ]}`),\n};\n\nexport const P1_PRESET = {\n\tname: 'P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n        {\n          \"id\": 40510,\n          \"enchant\": 3820,\n          \"gems\": [\n            41401,\n            39998\n          ]\n        },\n        {\n          \"id\": 44662,\n          \"gems\": [\n            40051\n          ]\n        },\n        {\n          \"id\": 40513,\n          \"enchant\": 3810,\n          \"gems\": [\n            39998\n          ]\n        },\n        {\n          \"id\": 44005,\n          \"enchant\": 3831,\n          \"gems\": [\n            40027\n          ]\n        },\n        {\n          \"id\": 40508,\n          \"enchant\": 2381,\n          \"gems\": [\n            39998,\n            40051\n          ]\n        },\n        {\n          \"id\": 40209,\n          \"enchant\": 2332,\n          \"gems\": [\n            0\n          ]\n        },\n        {\n          \"id\": 40564,\n          \"enchant\": 3246,\n          \"gems\": [\n            0\n          ]\n        },\n        {\n          \"id\": 40327,\n          \"gems\": [\n            39998\n          ]\n        },\n        {\n          \"id\": 40512,\n          \"enchant\": 3721,\n          \"gems\": [\n            39998,\n            40027\n          ]\n        },\n        {\n          \"id\": 39734,\n          \"enchant\": 3244\n        },\n        {\n          \"id\": 40399\n        },\n        {\n          \"id\": 40375\n        },\n        {\n          \"id\": 37111\n        },\n        {\n          \"id\": 40685\n        },\n        {\n          \"id\": 40395,\n          \"enchant\": 3834\n        },\n        {\n          \"id\": 40401,\n          \"enchant\": 1128\n        },\n        {\n          \"id\": 40709\n        }\n      ]}`),\n};\n\nexport const P2_PRESET = {\n\tname: 'P2 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n        {\n          \"id\": 46201,\n          \"enchant\": 3820,\n          \"gems\": [\n            41401,\n            40027\n          ]\n        },\n        {\n          \"id\": 45443,\n          \"gems\": [\n            40027\n          ]\n        },\n        {\n          \"id\": 46204,\n          \"enchant\": 3810,\n          \"gems\": [\n            45883\n          ]\n        },\n        {\n          \"id\": 45486,\n          \"enchant\": 3831,\n          \"gems\": [\n            40051\n          ]\n        },\n        {\n          \"id\": 45867,\n          \"enchant\": 2381,\n          \"gems\": [\n            40051,\n            39998\n          ]\n        },\n        {\n          \"id\": 45460,\n          \"enchant\": 2332,\n          \"gems\": [\n            40027,\n            0\n          ]\n        },\n        {\n          \"id\": 46199,\n          \"enchant\": 3246,\n          \"gems\": [\n            40051,\n            0\n          ]\n        },\n        {\n          \"id\": 45151,\n          \"gems\": [\n            39998\n          ]\n        },\n        {\n          \"id\": 46202,\n          \"enchant\": 3721,\n          \"gems\": [\n            39998,\n            40027\n          ]\n        },\n        {\n          \"id\": 45615,\n          \"enchant\": 3232,\n          \"gems\": [\n            39998,\n            40027\n          ]\n        },\n        {\n          \"id\": 45614,\n          \"gems\": [\n            40051\n          ]\n        },\n        {\n          \"id\": 46046,\n          \"gems\": [\n            40051\n          ]\n        },\n        {\n          \"id\": 45535\n        },\n        {\n          \"id\": 45466\n        },\n        {\n          \"id\": 46017,\n          \"enchant\": 3834\n        },\n        {\n          \"id\": 45470,\n          \"enchant\": 1128,\n          \"gems\": [\n            40027\n          ]\n        },\n        {\n          \"id\": 45114\n        }\n      ]}`),\n};\n","import { IconPickerConfig } from '../core/components/icon_picker.js';\nimport { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { Sim } from '../core/sim.js';\nimport { Target } from '../core/target.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport {\n\tAirTotem,\n\tRestorationShaman_Options as ShamanOptions,\n\tShamanHealSpell,\n\tShamanShield,\n} from '../core/proto/shaman.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const Bloodlust = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecRestorationShaman>({\n\tfieldName: 'bloodlust',\n\tid: ActionId.fromSpellId(2825),\n});\nexport const ShamanShieldInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecRestorationShaman, ShamanShield>({\n\tfieldName: 'shield',\n\tvalues: [\n\t\t{ value: ShamanShield.NoShield, tooltip: 'No Shield' },\n\t\t{ actionId: ActionId.fromSpellId(57960), value: ShamanShield.WaterShield },\n\t\t{ actionId: ActionId.fromSpellId(49281), value: ShamanShield.LightningShield },\n\t],\n});\n\n\nexport const PrimaryHealInput = InputHelpers.makeRotationEnumInput<Spec.SpecRestorationShaman, ShamanHealSpell>({\n\tfieldName: 'primaryHeal',\n\tlabel: 'Primary Heal',\n\tlabelTooltip: 'Set to \\'AutoHeal\\', to automatically swap based on best heal.',\n\tvalues: [\n\t\t{\n\t\t\tname: \"Auto Heal\",\n\t\t\tvalue: ShamanHealSpell.AutoHeal\n\t\t},\n\t\t{\n\t\t\tname: \"Lesser Healing Wave\",\n\t\t\tvalue: ShamanHealSpell.LesserHealingWave // actionId: ActionId.fromSpellId(49276),\n\t\t},\n\t\t{\n\t\t\tname: \"Healing Wave\",\n\t\t\tvalue: ShamanHealSpell.HealingWave // actionId: ActionId.fromSpellId(49273),\n\t\t},\n\t\t{\n\t\t\tname: \"Chain Heal\",\n\t\t\tvalue: ShamanHealSpell.ChainHeal // actionId: ActionId.fromSpellId(55459),\n\t\t},\n\t]\n});\n\n\nexport const UseRiptide = InputHelpers.makeRotationBooleanInput<Spec.SpecRestorationShaman>({\n\tfieldName: 'useRiptide',\n\tlabel: 'Use Riptide',\n\tlabelTooltip: 'Causes riptide to be cast on primary target when CD is available and not already on.',\n\tshowWhen: (player: Player<Spec.SpecRestorationShaman>) => player.getTalents().riptide,\n\tchangeEmitter: (player: Player<Spec.SpecRestorationShaman>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.rotationChangeEmitter, player.talentsChangeEmitter]),\n});\n\nexport const UseEarthShield = InputHelpers.makeRotationBooleanInput<Spec.SpecRestorationShaman>({\n\tfieldName: 'useEarthShield',\n\tlabel: 'Use Earth Shield',\n\tlabelTooltip: 'Causes earth shield to be cast on healing target.',\n\tshowWhen: (player: Player<Spec.SpecRestorationShaman>) => player.getTalents().earthShield,\n\tchangeEmitter: (player: Player<Spec.SpecRestorationShaman>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.rotationChangeEmitter, player.talentsChangeEmitter]),\n});\n\nexport const TriggerEarthShield = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecRestorationShaman>({\n\tfieldName: 'earthShieldPPM',\n\tlabel: 'Earth Shield PPM',\n\tlabelTooltip: 'How many times Earth Shield should be triggered per minute.',\n\tshowWhen: (player: Player<Spec.SpecRestorationShaman>) => player.getTalents().earthShield && player.getRotation().useEarthShield,\n\tchangeEmitter: (player: Player<Spec.SpecRestorationShaman>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.rotationChangeEmitter, player.talentsChangeEmitter]),\n});\n\nexport const RestorationShamanRotationConfig = {\n\tinputs: [\n\t\tPrimaryHealInput,\n\t\tUseRiptide,\n\t\tUseEarthShield,\n\t\tTriggerEarthShield,\n\t],\n};\n\n","import { RaidBuffs } from '../core/proto/common.js';\nimport { PartyBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Debuffs } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js'\nimport { Player } from '../core/player.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { TotemsSection } from '../core/components/totem_inputs.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\n\nimport * as ShamanInputs from './inputs.js';\nimport * as Presets from './presets.js';\nimport { shamanGlyphsConfig } from '../core/talents/shaman.js';\n\nexport class RestorationShamanSimUI extends IndividualSimUI<Spec.SpecRestorationShaman> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecRestorationShaman>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'restoration-shaman-sim-ui',\n\t\t\tcssScheme: 'shaman',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t],\n\t\t\twarnings: [\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatSpellPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatMana,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecRestorationShaman>) => {\n\t\t\t\tlet stats = new Stats();\n\t\t\t\tstats = stats.addStat(Stat.StatSpellCrit, player.getTalents().tidalMastery * 1 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t\t\treturn {\n\t\t\t\t\ttalents: stats,\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P1_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 0.22,\n\t\t\t\t\t[Stat.StatSpirit]: 0.05,\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.67,\n\t\t\t\t\t[Stat.StatSpellHaste]: 1.29,\n\t\t\t\t\t[Stat.StatMP5]: 0.08,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.RaidHealingTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: RaidBuffs.create({\n\t\t\t\t\tarcaneBrilliance: true,\n\t\t\t\t\tdivineSpirit: true,\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tsanctifiedRetribution: true,\n\t\t\t\t}),\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfWisdom: 2,\n\t\t\t\t\tvampiricTouch: true,\n\t\t\t\t}),\n\t\t\t\tdebuffs: Debuffs.create({\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tjudgementOfWisdom: true,\n\t\t\t\t\tmisery: true,\n\t\t\t\t\tcurseOfElements: true,\n\t\t\t\t\tshadowMastery: true,\n\t\t\t\t}),\n\t\t\t},\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tShamanInputs.ShamanShieldInput,\n\t\t\t\tShamanInputs.Bloodlust,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: ShamanInputs.RestorationShamanRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tOtherInputs.TankAssignment\n\t\t\t\t],\n\t\t\t},\n\t\t\tcustomSections: [\n\t\t\t\tTotemsSection,\n\t\t\t],\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.RaidHealingTalents,\n\t\t\t\t\tPresets.TankHealingTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.PRE_RAID_PRESET,\n\t\t\t\t\tPresets.P1_PRESET,\n\t\t\t\t\tPresets.P2_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["TankHealingTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","ShamanMajorGlyph","GlyphOfEarthlivingWeapon","major2","GlyphOfEarthShield","major3","GlyphOfLesserHealingWave","minor2","ShamanMinorGlyph","GlyphOfWaterShield","minor1","GlyphOfRenewedLife","minor3","GlyphOfGhostWolf","RaidHealingTalents","GlyphOfChainHeal","DefaultRotation","RestorationShamanRotation","totems","ShamanTotems","earth","EarthTotem","StrengthOfEarthTotem","air","AirTotem","WrathOfAirTotem","fire","FireTotem","FlametongueTotem","water","WaterTotem","HealingStreamTotem","useEarthShield","useRiptide","DefaultOptions","RestorationShamanOptions","shield","ShamanShield","WaterShield","bloodlust","earthShieldPPM","DefaultConsumes","Consumes","defaultPotion","Potions","RunicManaInjector","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","PRE_RAID_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","fromJsonString","P1_PRESET","P2_PRESET","Bloodlust","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","ShamanShieldInput","InputHelpers.makeSpecOptionsEnumIconInput","values","value","NoShield","actionId","LightningShield","RestorationShamanRotationConfig","inputs","InputHelpers.makeRotationEnumInput","label","labelTooltip","ShamanHealSpell","AutoHeal","LesserHealingWave","HealingWave","ChainHeal","InputHelpers.makeRotationBooleanInput","showWhen","player","getTalents","riptide","changeEmitter","TypedEvent","onAny","specOptionsChangeEmitter","rotationChangeEmitter","talentsChangeEmitter","earthShield","InputHelpers.makeSpecOptionsNumberInput","getRotation","RestorationShamanSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","warnings","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","stats","Stats","addStat","tidalMastery","Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE","talents","defaults","Presets.P1_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","Presets.RaidHealingTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","moonkinAura","sanctifiedRetribution","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","vampiricTouch","debuffs","Debuffs","faerieFire","judgementOfWisdom","misery","curseOfElements","shadowMastery","playerIconInputs","ShamanInputs.ShamanShieldInput","ShamanInputs.Bloodlust","rotationInputs","ShamanInputs.RestorationShamanRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","customSections","TotemsSection","encounterPicker","showExecuteProportion","presets","Presets.TankHealingTalents","Presets.PRE_RAID_PRESET","Presets.P2_PRESET"],"mappings":"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"}