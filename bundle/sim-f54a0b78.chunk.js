import{cc as t,Q as n,q as e,r as a,ea as i,eb as o,du as s,ec as r,ed as l,dj as h,L as d,bZ as m,c0 as g,c2 as c,bj as u,A as p,T as f,ee as S,d as T,a6 as b,a as E,ap as R,b2 as w,am as v,K as C,aq as y}from"./detailed_results-ccec58a3.chunk.js";import{B as O,m as A,j as P,i as x,u as W,b as I,a as M,c as N,k,I as B,a5 as D,T as H,t as G}from"./individual_sim_ui-7a1d617c.chunk.js";const U={name:"Arms",data:t.create({talentsString:"3022032023335100102012213231251-305-2033",glyphs:n.create({major1:e.GlyphOfRending,major2:e.GlyphOfMortalStrike,major3:e.GlyphOfExecution,minor1:a.GlyphOfThunderClap,minor2:a.GlyphOfCommand,minor3:a.GlyphOfCharge})})},j={name:"Fury",data:t.create({talentsString:"32002301233-305053000520310053120500351",glyphs:n.create({major1:e.GlyphOfWhirlwind,major2:e.GlyphOfHeroicStrike,major3:e.GlyphOfExecution,minor1:a.GlyphOfBattle,minor2:a.GlyphOfBloodrage,minor3:a.GlyphOfCharge})})},F=i.create({useRend:!0,useMs:!0,useCleave:!1,useOverpower:!1,executePhaseOverpower:!1,mainGcd:o.Slam,sunderArmor:s.SunderArmorMaintain,msRageThreshold:35,hsRageThreshold:30,rendHealthThresholdAbove:20,rendRageThresholdBelow:100,slamRageThreshold:25,rendCdThreshold:0,useHsDuringExecute:!0,useBtDuringExecute:!0,useWwDuringExecute:!0,useSlamOverExecute:!0,spamExecute:!0,stanceOption:r.DefaultStance}),J=i.create({useRend:!0,useMs:!0,useCleave:!1,sunderArmor:s.SunderArmorMaintain,msRageThreshold:355,slamRageThreshold:25,hsRageThreshold:50,rendCdThreshold:0,rendHealthThresholdAbove:100,useHsDuringExecute:!0,spamExecute:!0,stanceOption:r.DefaultStance}),K=l.create({startingRage:0,useRecklessness:!0,useShatteringThrow:!0,shout:h.WarriorShoutCommanding}),_=d.create({flask:m.FlaskOfEndlessRage,food:g.FoodSpicedWormBurger,defaultPotion:c.IndestructiblePotion,prepopPotion:c.PotionOfSpeed}),q={name:"P1 Pre-Raid Fury Preset",tooltip:O,enableWhen:t=>0!=t.getTalentTree(),gear:u.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 41386,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42645,\n\t\t\t"gems": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44195,\n\t\t\t"enchant": 3808\n\t\t},\n\t\t{\n\t\t\t"id": 37647,\n\t\t\t"enchant": 3605\n\t\t},\n\t\t{\n\t\t\t"id": 39606,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t40003,\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44203,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39609,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t40037,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40694,\n\t\t\t"gems": [\n\t\t\t\t42149,\n\t\t\t\t42149\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44205,\n\t\t\t"enchant": 3823\n\t\t},\n\t\t{\n\t\t\t"id": 44306,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t40037,\n\t\t\t\t40037\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42642,\n\t\t\t"gems": [\n\t\t\t\t42149\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37642\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40684\n\t\t},\n\t\t{\n\t\t\t"id": 37852,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{\n\t\t\t"id": 37852,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{\n\t\t\t"id": 37191\n\t\t}\n\t]}')},z={name:"P1 Fury Preset",tooltip:O,enableWhen:t=>0!=t.getTalentTree(),gear:u.fromJsonString('{ "items": [\n\t\t{\n\t\t\t"id": 44006,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41285,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40530,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t40037\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3605\n\t\t},\n\t\t{\n\t\t\t"id": 40539,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39765,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40541,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40205,\n\t\t\t"gems": [\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40529,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t40022\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 43993,\n\t\t\t"gems": [\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40717\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40256\n\t\t},\n\t\t{\n\t\t\t"id": 40384,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{\n\t\t\t"id": 40384,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{\n\t\t\t"id": 40385\n\t\t}\n\t]}')},L={name:"P2 Fury Preset",tooltip:O,enableWhen:t=>0!=t.getTalentTree(),gear:u.fromJsonString('{ "items": [\n\t\t{\n\t\t\t"id": 46151,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 45517,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 46149,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 46032,\n\t\t\t"enchant": 3605,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t40037\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 46146,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 45611,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t40037,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 46148,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t40058\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 46095,\n\t\t\t"gems": [\n\t\t\t\t42154,\n\t\t\t\t42142,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 45536,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 45608,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 45534,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 45931\n\t\t},\n\t\t{\n\t\t\t"id": 45516,\n\t\t\t"enchant": 3789,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 45516,\n\t\t\t"enchant": 3789,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 45296,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t}\n\t]}')},Q={name:"P1 Pre-Raid Arms Preset",tooltip:O,enableWhen:t=>0==t.getTalentTree(),gear:u.fromJsonString('{ "items": [\n\t\t{\n\t\t\t"id": 41386,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41285,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42645,\n\t\t\t"gems": [\n\t\t\t\t40002\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44195,\n\t\t\t"enchant": 3808\n\t\t},\n\t\t{\n\t\t\t"id": 37647,\n\t\t\t"enchant": 3605\n\t\t},\n\t\t{\n\t\t\t"id": 39606,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t40002,\n\t\t\t\t40002\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 41355,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39609,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t40037,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40694,\n\t\t\t"gems": [\n\t\t\t\t42149,\n\t\t\t\t42149\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37193,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t40002,\n\t\t\t\t40037\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44306,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t40086,\n\t\t\t\t40002\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42642,\n\t\t\t"gems": [\n\t\t\t\t42149\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37642\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40684\n\t\t},\n\t\t{\n\t\t\t"id": 37852,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t"id": 37191\n\t\t}\n\t]}')},Z={name:"P1 Arms Preset",tooltip:O,enableWhen:t=>0==t.getTalentTree(),gear:u.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 40528,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t42153\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40530,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t40038\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3605\n\t\t},\n\t\t{\n\t\t\t"id": 40539,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42153\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40330,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t40002,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40541,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40205,\n\t\t\t"gems": [\n\t\t\t\t42153\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40318,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t49110,\n\t\t\t\t40038\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 43993,\n\t\t\t"gems": [\n\t\t\t\t40002\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40474\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40256\n\t\t},\n\t\t{\n\t\t\t"id": 40384,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t"id": 40385\n\t\t}\n\t]}')},V={name:"P2 Arms Preset",tooltip:O,enableWhen:t=>0==t.getTalentTree(),gear:u.fromJsonString('{"items": [\n\t\t  {\n\t\t\t"id": 46151,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t  41398,\n\t\t\t  42142\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45459,\n\t\t\t"gems": [\n\t\t\t  40002\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46149,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t  42153\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46032,\n\t\t\t"enchant": 3605,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  40037\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46146,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t  42153,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45663,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46148,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t  40037,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45241,\n\t\t\t"gems": [\n\t\t\t  49110,\n\t\t\t  40037,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45536,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  39996,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45599,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t  40002,\n\t\t\t  40002\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 45608,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46322,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t"id": 46038\n\t\t  },\n\t\t  {\n\t\t\t"id": 45931\n\t\t  },\n\t\t  {\n\t\t\t"id": 45533,\n\t\t\t"enchant": 3789,\n\t\t\t"gems": [\n\t\t\t  39996,\n\t\t\t  39996\n\t\t\t]\n\t\t  },\n\t\t  {},\n\t\t  {\n\t\t\t"id": 45296,\n\t\t\t"gems": [\n\t\t\t  39996\n\t\t\t]\n\t\t  }\n\t]}')},X=A({fieldName:"useRecklessness",id:p.fromSpellId(1719)}),Y=A({fieldName:"useShatteringThrow",id:p.fromSpellId(64382)}),$=P({fieldName:"startingRage",label:"Starting Rage",labelTooltip:"Initial rage at the start of each iteration."}),tt=x({fieldName:"munch",label:"Munching",labelTooltip:'Apply "munching" to Deep Wounds'}),nt=x({fieldName:"stanceSnapshot",label:"Stance Snapshot",labelTooltip:"Ability that is cast at the same time as stance swap will benefit from the bonus of the stance before the swap."}),et=W({fieldName:"shout",values:[{color:"c79c6e",value:h.WarriorShoutNone},{actionId:p.fromSpellId(2048),value:h.WarriorShoutBattle},{actionId:p.fromSpellId(469),value:h.WarriorShoutCommanding}]}),at={inputs:[I({fieldName:"useMs",label:"Use Mortal Strike",labelTooltip:"Use Mortal Strike when rage threshold is met.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>0==t.getTalentTree()&&!t.getRotation().customRotationOption}),I({fieldName:"useCleave",label:"Use Cleave",labelTooltip:"Use Cleave instead of Heroic Strike.",showWhen:t=>!t.getRotation().customRotationOption}),I({fieldName:"useRend",label:"Use Rend",labelTooltip:"Use Rend when rage threshold is met and the debuff duration is less than refresh time.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>!t.getRotation().customRotationOption}),I({fieldName:"useOverpower",label:"Use Overpower",labelTooltip:"Use Overpower whenever it is available on an open GCD.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>1==t.getTalentTree()&&!t.getRotation().customRotationOption}),M({fieldName:"mainGcd",label:"Main GCD",labelTooltip:"Main GCD ability that will be prioritized above other abilities.",values:[{name:"Slam",value:o.Slam},{name:"Bloodthirst",value:o.Bloodthirst},{name:"Whirlwind",value:o.Whirlwind}],changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>1==t.getTalentTree()&&!t.getRotation().customRotationOption}),N({fieldName:"msRageThreshold",label:"Mortal Strike rage threshold",labelTooltip:"Mortal Strike when rage is above:",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>(t.getRotation().useMs||t.getRotation().customRotationOption)&&0==t.getTalentTree()}),N({fieldName:"slamRageThreshold",label:"Slam rage threshold",labelTooltip:"Slam when rage is above:",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>(t.getRotation().useMs||t.getRotation().customRotationOption)&&0==t.getTalentTree()}),N({fieldName:"bloodsurgeDurationThreshold",label:"Exp Slam: Bloodsurge duration threshold (s)",labelTooltip:"Cast Exp Slam when Bloodsurge duration is below (seconds):",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getRotation().customRotationOption&&1==t.getTalentTree()}),N({fieldName:"hsRageThreshold",label:"HS rage threshold",labelTooltip:"Heroic Strike when rage is above:"}),N({fieldName:"rendHealthThresholdAbove",label:"Rend health threshold (%)",labelTooltip:"Rend will only be used when boss health is above this value in %.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>1==t.getRotation().useRend||t.getRotation().customRotationOption}),N({fieldName:"rendRageThresholdBelow",label:"Rend rage threshold below",labelTooltip:"Rend will only be used when rage is smaller than this value.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>(1==t.getRotation().useRend||t.getRotation().customRotationOption)&&1==t.getTalentTree()}),N({fieldName:"rendCdThreshold",label:"Rend Refresh Time (s)",labelTooltip:"Refresh Rend when the remaining duration is less than this amount of time (seconds).",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>1==t.getRotation().useRend||t.getRotation().customRotationOption}),I({fieldName:"useHsDuringExecute",label:"HS during Execute Phase",labelTooltip:"Use Heroic Strike during Execute Phase."}),I({fieldName:"useBtDuringExecute",label:"BT during Execute Phase",labelTooltip:"Use Bloodthirst during Execute Phase.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>1==t.getTalentTree()}),I({fieldName:"useWwDuringExecute",label:"WW during Execute Phase",labelTooltip:"Use Whirlwind during Execute Phase.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>1==t.getTalentTree()}),I({fieldName:"useSlamOverExecute",label:"Slam during Execute Phase",labelTooltip:"Use Slam Over Execute when Bloodsurge Procs in Execute Phase.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>1==t.getTalentTree()}),I({fieldName:"executePhaseOverpower",label:"Overpower in Execute Phase",labelTooltip:"Use Overpower instead of Execute whenever it is available.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>(1==t.getRotation().useOverpower||t.getRotation().customRotationOption)&&1==t.getTalentTree()}),I({fieldName:"spamExecute",label:"Spam Execute",labelTooltip:"Use Execute whenever possible during Execute Phase.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>0==t.getTalentTree()}),M({fieldName:"sunderArmor",label:"Sunder Armor",values:[{name:"Never",value:s.SunderArmorNone},{name:"Help Stack",value:s.SunderArmorHelpStack},{name:"Maintain Debuff",value:s.SunderArmorMaintain}]}),M({fieldName:"stanceOption",label:"Stance Option",labelTooltip:"Stance to stay on. The default for Fury (Bloodthirst) is Berserker Stance and Battle Stance for everything else.",values:[{name:"Default",value:r.DefaultStance},{name:"Battle Stance",value:r.BattleStance},{name:"Berserker Stance",value:r.BerserkerStance}]}),I({fieldName:"maintainDemoShout",label:"Maintain Demo Shout",labelTooltip:"Keep Demo Shout active on the primary target."}),I({fieldName:"maintainThunderClap",label:"Maintain Thunder Clap",labelTooltip:"Keep Thunder Clap active on the primary target."}),I({fieldName:"customRotationOption",label:"Custom Rotation (Advanced)",labelTooltip:"Create your own rotation action priority list.",showWhen:t=>t.sim.getShowExperimental(),changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),k({fieldName:"customRotation",numColumns:3,showWhen:t=>t.getRotation().customRotationOption&&t.sim.getShowExperimental(),values:[{actionId:p.fromSpellId(23881),value:S.BloodthirstCustom},{actionId:p.fromSpellId(1680),value:S.WhirlwindCustom},{actionId:p.fromSpellId(47475),value:S.SlamCustom},{actionId:p.fromSpellId(47475),value:S.SlamExpiring,text:"Exp",showWhen:t=>1==t.getTalentTree()},{actionId:p.fromSpellId(47486),value:S.MortalStrike},{actionId:p.fromSpellId(47465),value:S.Rend},{actionId:p.fromSpellId(7384),value:S.Overpower},{actionId:p.fromSpellId(47471),value:S.Execute},{actionId:p.fromSpellId(47502),value:S.ThunderClap}]})]};class it extends B{constructor(t,n){super(t,n,{cssClass:"warrior-sim-ui",cssScheme:"warrior",knownIssues:[],epStats:[T.StatStrength,T.StatAgility,T.StatAttackPower,T.StatExpertise,T.StatMeleeHit,T.StatMeleeCrit,T.StatMeleeHaste,T.StatArmorPenetration,T.StatArmor],epPseudoStats:[b.PseudoStatMainHandDps,b.PseudoStatOffHandDps],epReferenceStat:T.StatAttackPower,displayStats:[T.StatHealth,T.StatStamina,T.StatStrength,T.StatAgility,T.StatAttackPower,T.StatExpertise,T.StatMeleeHit,T.StatMeleeCrit,T.StatMeleeHaste,T.StatArmorPenetration,T.StatArmor],modifyDisplayStats:t=>{let n=new E;return t.getInFrontOfTarget()||(n=n.addStat(T.StatExpertise,4*t.getTalents().weaponMastery*D)),{talents:n}},defaults:{gear:L.gear,epWeights:E.fromMap({[T.StatStrength]:2.72,[T.StatAgility]:1.82,[T.StatAttackPower]:1,[T.StatExpertise]:2.55,[T.StatMeleeHit]:.79,[T.StatMeleeCrit]:2.12,[T.StatMeleeHaste]:1.72,[T.StatArmorPenetration]:2.17,[T.StatArmor]:.03},{[b.PseudoStatMainHandDps]:6.29,[b.PseudoStatOffHandDps]:3.58}),consumes:_,rotation:F,talents:j.data,specOptions:K,raidBuffs:R.create({giftOfTheWild:w.TristateEffectImproved,swiftRetribution:!0,strengthOfEarthTotem:w.TristateEffectImproved,icyTalons:!0,abominationsMight:!0,leaderOfThePack:w.TristateEffectRegular,sanctifiedRetribution:!0,bloodlust:!0,devotionAura:w.TristateEffectImproved,stoneskinTotem:w.TristateEffectImproved}),partyBuffs:v.create({heroicPresence:!1}),individualBuffs:C.create({blessingOfKings:!0,blessingOfMight:w.TristateEffectImproved}),debuffs:y.create({bloodFrenzy:!0,heartOfTheCrusader:!0,mangle:!0,sunderArmor:!0,curseOfWeakness:w.TristateEffectRegular,faerieFire:w.TristateEffectImproved})},playerIconInputs:[et,X,Y],rotationInputs:at,includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[$,tt,nt,H,G]},encounterPicker:{showExecuteProportion:!0},presets:{talents:[U,j],gear:[q,z,L,Q,Z,V]}})}}export{J as A,K as D,j as F,Z as P,it as W,U as a,_ as b,V as c,F as d,z as e,L as f};
//# sourceMappingURL=sim-f54a0b78.chunk.js.map
